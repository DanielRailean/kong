servers:
- url: http://localhost:8001
  description: 8001 is the default port on which the Admin API listens.
- url: https://localhost:8444
  description: 8444 is the default port for HTTPS traffic to the Admin API.
paths:
  /upstreams/{upstreams}/targets:
    post:
      description: This method is not available when using DB-less mode.
    get: []
  /certificates/{certificates}:
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
    get: []
  /plugins:
    post:
      description: This method is not available when using DB-less mode.
  /certificates/{certificates}/snis/{snis}: []
  /upstreams/{upstreams}/targets/all:
    get:
      summary: List all Targets
  /services/{services}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /clustering/data-planes: []
  /clustering/status: []
  /targets/{targets}: []
  /upstreams/{upstreams}/targets/{targets}:
    put:
      description: This method is not available when using DB-less mode.
    patch:
      summary: Update Target
      description: This method is not available when using DB-less mode.
    delete:
      summary: Delete Target
      description: This method is not available when using DB-less mode.
    get: []
  /:
    get:
      summary: Retrieve node information
  /schemas/{db_entity_name}/validate:
    post:
      summary: Validate a configuration against a schema
      description: This method is not available when using DB-less mode.
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    put:
      description: This method is not available when using DB-less mode.
  /schemas/plugins/validate:
    post:
      summary: Validate a plugin configuration against the schema
      description: This method is not available when using DB-less mode.
  /snis/{snis}/certificate: []
  /upstreams/{upstreams}/targets/{targets}/healthy:
    put:
      description: This method is not available when using DB-less mode.
  /consumers:
    get: []
  /timers:
    get:
      summary: Retrieve runtime debugging info of Kong's timers
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /endpoints:
    get:
      summary: List available endpoints
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /routes/{routes}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /status:
    get:
      summary: Retrieve node status
  /certificates/{certificates}/snis: []
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    put:
      description: This method is not available when using DB-less mode.
  /targets/{targets}/upstream: []
  /cache/{key}:
    delete:
      description: This method is not available when using DB-less mode.
    get: []
  /plugins/schema/{name}:
    get: []
  /cache:
    delete:
      description: This method is not available when using DB-less mode.
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:
    put:
      description: This method is not available when using DB-less mode.
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /targets: []
  /consumers/{consumers}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /routes/{routes}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /services/{services}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /config:
    post:
      description: This method is only available when using DB-less mode.
    get:
      description: This method is only available when using DB-less mode.
openapi: 3.1.0
components:
  schemas:
    targets:
      properties:
        upstream:
          $ref: '#/components/schemas/upstreams'
        target:
          type: string
        tags:
          type: array
        created_at:
          format: float
          type: number
        id:
          format: uuid
          type: string
        weight:
          default: 100
          type: integer
      required:
      - upstream
      - target
      type: object
    consumers:
      properties:
        username:
          type: string
        tags:
          type: array
        custom_id:
          type: string
        id:
          format: uuid
          type: string
        created_at:
          format: int32
          type: integer
      required: []
      type: object
    routes:
      properties:
        request_buffering:
          default: true
          type: boolean
        response_buffering:
          default: true
          type: boolean
        paths: []
        protocols:
          default:
          - http
          - https
          type: array
        https_redirect_status_code:
          default: 426
          type: integer
        destinations:
          type: array
        regex_priority:
          default: 0
          type: integer
        hosts:
          type: array
        snis:
          type: array
        id:
          format: uuid
          type: string
        sources:
          type: array
        tags:
          type: array
        service:
          $ref: '#/components/schemas/services'
        name:
          type: string
        updated_at:
          format: int32
          type: integer
        strip_path:
          default: true
          type: boolean
        headers:
          type: array
        path_handling:
          default: v0
          type: string
        created_at:
          format: int32
          type: integer
        preserve_host:
          default: false
          type: boolean
        methods:
          type: array
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
      type: object
    tags:
      properties:
        tag:
          type: string
        entity_id:
          type: string
        entity_name:
          type: string
      required:
      - tag
      - entity_name
      - entity_id
      type: object
    clustering_data_planes:
      properties:
        sync_status:
          default: unknown
          type: string
        hostname:
          type: string
        version:
          type: string
        last_seen:
          format: int32
          type: integer
        config_hash:
          type: string
        id:
          type: string
        ip:
          type: string
      required:
      - id
      - ip
      - hostname
      - sync_status
      type: object
    parameters:
      properties:
        value:
          type: string
        created_at:
          format: int32
          type: integer
        key:
          type: string
      required:
      - key
      - value
      type: object
    plugins:
      properties:
        name:
          type: string
        protocols:
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
          default:
          - grpc
          - grpcs
          - http
          - https
          type: array
        tags:
          type: array
        route:
          $ref: '#/components/schemas/routes'
          default: ~
          nullable: true
        enabled:
          default: true
          type: boolean
        consumer:
          $ref: '#/components/schemas/consumers'
          default: ~
          nullable: true
        config:
          type: array
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        service:
          $ref: '#/components/schemas/services'
          default: ~
          nullable: true
      required:
      - name
      - protocols
      - enabled
      type: object
    certificates:
      properties:
        tags:
          type: array
        key:
          type: string
        key_alt:
          type: string
        cert_alt:
          type: string
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        cert:
          type: string
      required:
      - cert
      - key
      type: object
    ca_certificates:
      properties:
        cert_digest:
          type: string
        tags:
          type: array
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        cert:
          type: string
      required:
      - cert
      type: object
    snis:
      properties:
        name:
          type: string
        created_at:
          format: int32
          type: integer
        tags:
          type: array
        id:
          format: uuid
          type: string
        certificate:
          $ref: '#/components/schemas/certificates'
      required:
      - name
      - certificate
      type: object
    upstreams:
      properties:
        hash_on_cookie_path:
          default: /
          type: string
        name:
          type: string
        hash_fallback_query_arg:
          type: string
        hash_on_uri_capture:
          type: string
        hash_fallback_uri_capture:
          type: string
        host_header:
          type: string
        id:
          format: uuid
          type: string
        healthchecks:
          default:
            active:
              healthy:
                successes: 0
                http_statuses:
                - 200
                - 302
                interval: 0
              unhealthy:
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
                interval: 0
              timeout: 1
              type: http
              concurrency: 10
              http_path: /
              https_verify_certificate: true
            passive:
              healthy:
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
                successes: 0
              unhealthy:
                timeouts: 0
                http_failures: 0
                http_statuses:
                - 429
                - 500
                - 503
                tcp_failures: 0
              type: http
          type: array
        client_certificate:
          $ref: '#/components/schemas/certificates'
        slots:
          default: 10000
          type: integer
        algorithm:
          default: round-robin
          type: string
        hash_on:
          default: none
          type: string
        hash_fallback:
          default: none
          type: string
        tags:
          type: array
        hash_on_header:
          type: string
        hash_on_query_arg:
          type: string
        created_at:
          format: int32
          type: integer
        hash_fallback_header:
          type: string
        hash_on_cookie:
          type: string
      required:
      - name
      type: object
    workspaces:
      properties:
        comment:
          type: string
        name:
          type: string
        config:
          type: array
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        meta:
          type: array
      required:
      - name
      type: object
    vaults:
      properties:
        prefix:
          type: string
        tags:
          type: array
        updated_at:
          format: int32
          type: integer
        description:
          type: string
        config:
          type: array
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - prefix
      - name
      type: object
    services:
      properties:
        protocol:
          default: http
          type: string
        name:
          type: string
        retries:
          default: 5
          type: integer
        connect_timeout:
          default: 60000
          type: integer
        write_timeout:
          default: 60000
          type: integer
        read_timeout:
          default: 60000
          type: integer
        client_certificate:
          $ref: '#/components/schemas/certificates'
        tls_verify:
          type: boolean
        tags:
          type: array
        tls_verify_depth:
          type: integer
          default: ~
          nullable: true
        path:
          type: string
        enabled:
          default: true
          type: boolean
        ca_certificates:
          type: array
        id:
          format: uuid
          type: string
        host:
          type: string
        created_at:
          format: int32
          type: integer
        updated_at:
          format: int32
          type: integer
        port:
          default: 80
          type: integer
      required:
      - protocol
      - host
      - port
      - enabled
      type: object
info:
  summary: Kong RESTful Admin API for administration purposes.
  version: 3.0.0
  license:
    url: https://github.com/Kong/kong/blob/master/LICENSE
    name: Apache 2.0
  contact:
    url: https://github.com/Kong/kong
    name: Kong
  description: "       {{site.base_gateway}} comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  title: Kong Admin API
